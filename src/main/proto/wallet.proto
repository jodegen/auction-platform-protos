syntax = "proto3";

option java_package = "de.jodegen.wallet.grpc";
option java_multiple_files = true;

package wallet;

service WalletService {
  rpc GetCurrencyBalance (GetBalanceRequest) returns (GetBalanceResponse);
  rpc ReserveFundsForBid (ReserveFundsForBidRequest) returns (ReserveFundsForBidResponse);
  rpc ReleaseReservedFunds (ReleaseReservedFundsRequest) returns (ReleaseReservedFundsResponse);
  rpc ProcessBuyNowPayment (ProcessBuyNowPaymentRequest) returns (ProcessBuyNowPaymentResponse);
  rpc PayoutOnAuctionSold (PayoutOnAuctionSoldRequest) returns (PayoutOnAuctionSoldResponse);
}

message GetBalanceRequest {
  int64 userId = 1;
  string currencyCode = 2;
}

message GetBalanceResponse {
  int64 userId = 1;
  string currencyCode = 2;
  double balance = 3;
  repeated ReservedBalance reservedBalances = 4;
}

message ReservedBalance {
  int64 reservedBalanceId = 1;
  int64 auctionId = 2;
  double amount = 3;
  string reason = 4;
}

message ProcessBuyNowPaymentRequest {
  int64 userId = 1;
  int64 auctionId = 2;
  double purchasePrice = 3;
  string currencyCode = 4;
}

message ProcessBuyNowPaymentResponse {
  bool success = 1;
}

message ReserveFundsForBidRequest {
  int64 userId = 1;
  int64 auctionId = 2;
  double bidAmount = 3;
  string currencyCode = 4;
}

message ReserveFundsForBidResponse {
  bool success = 1;
}

message ReleaseReservedFundsRequest {
  int64 userId = 1;
  int64 auctionId = 2;
  double bidAmount = 3;
  string currencyCode = 4;
}

message ReleaseReservedFundsResponse {
  bool success = 1;
}

message PayoutOnAuctionSoldRequest {
  int64 userId = 1;
  int64 auctionId = 2;
  string currencyCode = 3;
  double amount = 4;
  enum SaleType {
    BID = 0;
    BUY_NOW = 1;
  }
  SaleType saleType = 5;
}

message PayoutOnAuctionSoldResponse {
  bool success = 1;
}